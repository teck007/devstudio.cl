---
import { NavArrowLeft, NavArrowRight } from "iconoir-react";
export const prerender = false;
const {
  items = [],
} = Astro.props;
const itemCount = items.length;
---

<section id="services" class="w-full shadow-2xl bg-white/90">
  <div
    class="slider-fade-container"
    id="slider-fade-container"
    data-item-count={itemCount}
    data-slide-duration={6000}
  >
    {items.length > 0 ? (
      items.map((item: any, idx: number) => (
        <div
          class={`slider-fade-item absolute inset-0 flex flex-col items-center justify-center text-center p-4 md:p-8${idx === 0 ? " active" : ""}`}
          style={`background-image: url(/${item.imagen_url.toLowerCase()});`}
        >
          <div class="absolute inset-0 bg-black opacity-40"></div>
          <p class="w-3/5 text-white text-2xl md:text-4xl font-bold leading-tight drop-shadow-lg animate-fade-in-up text-shadow-black">
            {item.texto}
          </p>
        </div>
      ))
    ) : (
      <div class="slider-fade-item active absolute inset-0 flex flex-col items-center justify-center text-center p-4 md:p-8 bg-gray-300">
        <p class="w-full max-w-2xl text-gray-700 text-2xl md:text-4xl font-bold leading-tight">
          Cargando im√°genes...
        </p>
      </div>
    )}

    {itemCount > 1 && (
      <>
        <button
          class="slider-btn prev absolute top-1/2 left-4 transform -translate-y-1/2 bg-white/10 hover:bg-white/50 text-white p-2 rounded-full shadow-lg transition-all duration-300"
          aria-label="Anterior"
        >
          <NavArrowLeft className="h-6 w-6 md:h-10 md:w-12" />
        </button>
        <button
          class="slider-btn next absolute top-1/2 right-4 transform -translate-y-1/2 bg-white/10 hover:bg-white/50 text-white p-2 rounded-full shadow-lg transition-all duration-300"
          aria-label="Siguiente"
        >
          <NavArrowRight className="h-6 w-6 md:h-10 md:w-12" />
        </button>
      </>
    )}
  </div>
</section>

<script>
  function initSlider() {
    const container = document.getElementById("slider-fade-container");
    if (!container) return;
    const itemCount = parseInt(container.getAttribute("data-item-count"));
    const slideDuration = parseInt(
      container.getAttribute("data-slide-duration"),
    );
    let current = 0;
    let intervalId;
    const slides = container.querySelectorAll(".slider-fade-item");
    const prevBtn = container.querySelector(".slider-btn.prev");
    const nextBtn = container.querySelector(".slider-btn.next");

    function showSlide(idx) {
      slides.forEach((slide, i) => {
        if (i === idx) {
          slide.classList.add("active");
        } else {
          slide.classList.remove("active");
        }
      });
    }
    function nextSlide() {
      current = (current + 1) % itemCount;
      showSlide(current);
    }
    function prevSlide() {
      current = (current - 1 + itemCount) % itemCount;
      showSlide(current);
    }
    if (itemCount > 1) {
      intervalId = setInterval(nextSlide, slideDuration);
      nextBtn.addEventListener("click", () => {
        clearInterval(intervalId);
        nextSlide();
        intervalId = setInterval(nextSlide, slideDuration);
      });
      prevBtn.addEventListener("click", () => {
        clearInterval(intervalId);
        prevSlide();
        intervalId = setInterval(nextSlide, slideDuration);
      });
    }
  }
  document.addEventListener("astro:page-load", initSlider);
</script>

<style>
  .text-shadow-black {
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  }
  .slider-fade-container {
    position: relative;
    width: 100%; /* Use 100% width  to parent section */
    min-height: 80vh; /* Adjust height as needed */
    overflow: hidden;
  }
  .slider-fade-item {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%; /* Use 100% width  to container */
    min-height: 80vh; /* Match container height */
    opacity: 0;
    transition: opacity 1s ease-in-out;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-size: cover;
    background-position: center;
    z-index: 0;
  }
  .slider-fade-item.active {
    opacity: 1;
  }
  .slider-btn {
    /* Styles moved to Tailwind classes in the HTML */
  }

  /* Animation for text */
  .animate-fade-in-up {
    animation: fadeInUp 0.8s ease-out;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
